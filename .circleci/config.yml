version: 2.1

commands:
  terraform_init_plan_apply:
    description: "Plan Terraform deployment"
    parameters:
      env:
        type: string
    steps:
      - run:
          name: Terraform Init and Plan
          command: |
            cd terraform/environments/<< parameters.env >>
            terraform init -input=false
            terraform plan -out=tfplan
          environment:
            GOOGLE_APPLICATION_CREDENTIALS: /root/.gcp/credentials.json
      - persist_to_workspace:
          root: .
          paths:
            - .

  terraform_apply:
    description: "Apply Terraform deployment"
    parameters:
      env:
        type: string
    steps:
      - run:
          name: Terraform Apply
          command: |
            cd terraform/environments/<< parameters.env >>
            terraform apply -auto-approve tfplan
          environment:
            GOOGLE_APPLICATION_CREDENTIALS: /root/.gcp/credentials.json
      - run:
          name: Retrieve Instance ID
          command: |
            terraform refresh
            INSTANCE_ID=$(terraform output -raw instance_id)
            echo "The instance ID is: $INSTANCE_ID"

  terraform_plan_destroy:
    description: "Plan Terraform destroy"
    parameters:
      env:
        type: string
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Terraform Create Destroy Plan
          command: |
            cd terraform/environments/<< parameters.env >>
            terraform plan -destroy -out=tfplan-destroy
          environment:
            GOOGLE_APPLICATION_CREDENTIALS: /root/.gcp/credentials.json
      - persist_to_workspace:
          root: .
          paths:
            - .

  terraform_destroy:
    description: "Destroy Terraform deployment"
    parameters:
      env:
        type: string
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Terraform Destroy
          command: |
            cd terraform/environments/<< parameters.env >>
            terraform apply -auto-approve tfplan-destroy
          environment:
            GOOGLE_APPLICATION_CREDENTIALS: /root/.gcp/credentials.json

jobs:
  deploy_staging_apply:
    docker:
      - image: hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: Setup GCP Credentials
          command: |
            mkdir -p /root/.gcp
            echo $GOOGLE_APPLICATION_CREDENTIALS > /root/.gcp/credentials.json
      - terraform_init_plan_apply:
          env: staging
      - terraform_apply:
          env: staging

  deploy_staging_destroy:
    docker:
      - image: hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: Setup GCP Credentials
          command: |
            mkdir -p /root/.gcp
            echo $GOOGLE_APPLICATION_CREDENTIALS > /root/.gcp/credentials.json
      - terraform_plan_destroy:
          env: staging
      - terraform_destroy:
          env: staging

workflows:
  terraform_deploy:
    jobs:
      - start_staging:
          type: approval
          filters:
            branches:
              only:
                - staging
      - deploy_staging_apply:
          requires:
            - start_staging
          filters:
            branches:
              only:
                - staging
      - hold_staging_destroy:
          type: approval
          requires:
            - deploy_staging_apply
          filters:
            branches:
              only:
                - staging
      - deploy_staging_destroy:
          requires:
            - hold_staging_destroy
          filters:
            branches:
              only:
                - staging
